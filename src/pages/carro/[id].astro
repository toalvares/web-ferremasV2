---
import Layout from "../../layouts/Layout.astro";
import Cartempty from "../../icons/Cartempty.astro";
import { db, Productos } from "astro:db";

async function fetchProductos() {
  try {
    if (db === undefined) {
      throw new Error("La conexión a la base de datos no está definida");
    }

    const productos = await db.select().from(Productos);
    if (productos.length === 0) {
      throw new Error("No existen productos en la base de datos");
    }
    return productos;
  } catch (error) {
    console.error(error);
    throw error;
  }
}

const idurl = Astro.url.href.split("/")[4];
let productos = [];
let producto = null;
let errorMessage = "";

try {
  productos = await fetchProductos();
  producto = productos.find((producto) => producto.id === Number(idurl));
  if (!producto) {
    throw new Error("Producto no encontrado");
  }
} catch (error) {
  errorMessage = "Ha ocurrido un error, no se encuentran productos.";
}

const apiKeyId = "597055555532";
const apiKeySecret =
  "579B532A7440BB0C9079DED94D31EA1615BACEB56610332264630D42D0A36B1C";
const res = await fetch(
  "https://webpay3gint.transbank.cl/rswebpaytransaction/api/webpay/v1.2/transactions",
  {
    method: "POST",
    headers: {
      "Tbk-Api-Key-Id": apiKeyId,
      "Tbk-Api-Key-Secret": apiKeySecret,
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      buy_order: 123456789,
      session_id: "session123455754",
      amount: producto?.price,
      return_url: "https://ferremas.netlify.app/comprobante",
    }),
  }
);

const { token, url } = await res.json();

const formatter = new Intl.NumberFormat("es-CL", {
  style: "currency",
  currency: "CLP",
});
const precio_format = formatter.format(Number(producto?.price));
---

<Layout title="FerremaX | Las mejores herramientas del mercado">
  <main>
    {errorMessage ? (
      <div class="flex justify-center pt-24">
        <p class="text-2xl text-pretty font-bold">{errorMessage}</p>
      </div>
    ) : (
      <section class="container mx-auto p-20">
        <h1 class="text-4xl text-center font-bold text-gray-800">
          Carrito de compras
        </h1>

        <div class="flex flex-col items-center mt-6">
          <div
            class="flex items-center justify-between w-full border-b border-gray-200 py-2">
            <p class="text-xl text-gray-800">Producto</p>
            <p class="text-xl text-gray-800">Precio</p>
            <p class="text-xl text-gray-800">Cantidad</p>
            <p class="text-xl text-gray-800">Total</p>
          </div>

          <div
            class="flex items-center justify-between w-full border-b border-gray-200 py-2">
            <div class="flex items-center">
              <img
                src={`${producto?.image}`}
                class="w-16 h-16 object-cover rounded-lg"
                alt="Producto 1"
              />
              <p class="text-lg text-gray-800 ml-4">{producto?.name.slice(0, 9)}</p>
            </div>
            <p class="text-lg text-gray-800">{precio_format}</p>
            <p class="text-lg text-gray-800">1</p>
            <p class="text-lg text-gray-800">{precio_format}</p>
          </div>

          <div class="flex items-center justify-between w-full border-b border-gray-200 py-2">
            <p class="text-lg text-gray-800 font-bold">Total</p>
            <p class="text-lg text-gray-800 font-bold">{precio_format}</p>
          </div>

          <div class="flex items-center justify-between w-full mt-6">
            <a href="/productos" class="text-orange-500 underline">
              Seguir comprando
            </a>
            <a href={url + "?token_ws=" + token} class="bg-orange-500 text-white font-bold py-2 px-4 rounded-lg">
              Pagar
            </a>
          </div>
        </div>
      </section>
    )}
  </main>
</Layout>
